{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.js","api/index.js","components/Chart/Chart.js","components/CountryPicker/CountryPicker.js","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","console","log","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","modifiedData","fetchDailyData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","coronaImage","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6514f109.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1_KE8\",\"card\":\"Cards_card__IlixY\",\"infected\":\"Cards_infected__3yoYU\",\"recovered\":\"Cards_recovered__2Sr8_\",\"deaths\":\"Cards_deaths__30bQw\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport styles from './Cards.module.css';\r\n//count up(dependency of react) is used to do to the counter effect in the no of cases\r\nimport CountUp from 'react-countup';\r\n//classnames is used to link classes together and apply multiple classes in style\r\nimport cx from 'classnames';\r\n\r\nconst Cards = ({ data: {confirmed,recovered,deaths,lastUpdate}}) => {\r\n  console.log(confirmed);\r\n  if(!confirmed)\r\n  {\r\n    return 'Loading...';\r\n  }\r\n  return (\r\n    <div className={styles.container}>\r\n        <Grid container spacing={3} justify=\"center\">\r\n          <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n            <CardContent>\r\n              <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n              <Typography variant=\"h5\">\r\n                <CountUp\r\n                  start={0}\r\n                  end={confirmed.value}\r\n                  duration={2.5}\r\n                  separator=\",\"\r\n                  />\r\n              </Typography>\r\n              <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n              <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\r\n          </CardContent>\r\n          </Grid>\r\n          <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n            <CardContent>\r\n              <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                <Typography variant=\"h5\">\r\n                  <CountUp\r\n                    start={0}\r\n                    end={recovered.value}\r\n                    duration={2.5}\r\n                    separator=\",\"\r\n                    />\r\n                </Typography>\r\n                <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n              <Typography variant=\"body2\">Number of recoveries from COVID-19</Typography>\r\n          </CardContent>\r\n          </Grid>\r\n          <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n            <CardContent>\r\n              <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                <Typography variant=\"h5\">\r\n                  <CountUp\r\n                    start={0}\r\n                    end={deaths.value}\r\n                    duration={2.5}\r\n                    separator=\",\"\r\n                    />\r\n                </Typography>\r\n                <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n              <Typography variant=\"body2\">Number of death caused by COVID-19</Typography>\r\n          </CardContent>\r\n          </Grid>\r\n        </Grid>\r\n    </div>\r\n  )\r\n}\r\nexport default Cards;\r\n","import axios from 'axios';\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async(country) => {\r\n  let changeableUrl = url;\r\n\r\n  if(country){\r\n    changeableUrl = `${url}/countries/${country}`\r\n  }\r\n  try {\r\n    //destructuring data\r\n    const { data }=await axios.get(changeableUrl);\r\n\r\n    const modifiedData ={\r\n      confirmed: data.confirmed,\r\n      recovered: data.recovered,\r\n      deaths: data.deaths,\r\n      lastUpdate: data.lastUpdate\r\n    }\r\n\r\n    return modifiedData;\r\n  }\r\n  catch(error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n  try{\r\n    const {data} =await axios.get(`${url}/daily`);\r\n\r\n    const modifiedData = data.map((dailyData) => ({\r\n      confirmed: dailyData.confirmed.total,\r\n      deaths: dailyData.deaths.total,\r\n      date: dailyData.reportDate,\r\n    }));\r\n\r\n    return modifiedData;\r\n    }\r\n  catch(error) {\r\n\r\n  }\r\n}\r\n\r\nexport const fetchCountries = async() => {\r\n  try{\r\n    const { data: {countries}} = await axios.get(`${url}/countries`);\r\n\r\n    return countries.map((country) => country.name);\r\n  }\r\n  catch(error) {\r\n    console.log(error);\r\n  }\r\n}\r\n","import React,{ useState,useEffect } from 'react';\r\nimport { fetchDailyData } from '../../api'\r\nimport { Line,Bar } from 'react-chartjs-2';\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({ data, country }) => {\r\n  const [dailyData, setDailyData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setDailyData(await fetchDailyData());\r\n    }\r\n\r\n    fetchAPI();\r\n  },[]);\r\n\r\n  const lineChart = (\r\n    dailyData.length\r\n    ? (\r\n      <Line\r\n      data={{\r\n        labels: dailyData.map(({date}) => date),\r\n        datasets: [{\r\n          data: dailyData.map(({confirmed}) => confirmed),\r\n          label: 'Infected',\r\n          borderColor: '#3333ff',\r\n          fill: true,\r\n        }, {\r\n            data: dailyData.map(({deaths}) => deaths),\r\n            label: 'Deaths',\r\n            borderColor: 'red',\r\n            backgroundColor: 'rgba(255,0,0,0.5)',\r\n            fill: true,\r\n        }],\r\n      }}\r\n      />) : null\r\n  );\r\n\r\n  const barChart = (\r\n    data.confirmed\r\n    ? (\r\n      <Bar\r\n        data = {{\r\n          labels: ['Infectd','Recovered','Deaths'],\r\n          datasets: [{\r\n            label: 'People',\r\n            backgroundColor: [\r\n              'rgba(0,0,255,0.5)',\r\n              'rgba(0,255,0,0.5)',\r\n              'rgba(255,0,0,0.5)',\r\n            ],\r\n            data: [data.confirmed.value, data.recovered.value, data.deaths.value]\r\n          }]\r\n        }}\r\n        options={{\r\n          legend: { display: false},\r\n          title: {display: true, text: `Current state in ${country}`}\r\n        }}\r\n        />\r\n    ): null\r\n  );\r\n  return (\r\n    <div className={styles.container}>\r\n      {country ? barChart : lineChart}\r\n    </div>\r\n  )\r\n}\r\nexport default Chart;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\nimport styles from './CountryPicker.module.css';\r\nimport { fetchCountries } from '../../api';\r\n\r\nconst CountryPicker = ({handleCountryChange}) => {\r\n\r\n  const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async() => {\r\n      setFetchedCountries(await fetchCountries());\r\n    }\r\n\r\n    fetchAPI();\r\n  }, [setFetchedCountries]);\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n        <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n            <option value=\"\">Global</option>\r\n            {fetchedCountries.map((country,i) => <option key={i} value={country}>{country}</option>)}\r\n        </NativeSelect>\r\n    </FormControl>\r\n  )\r\n}\r\nexport default CountryPicker;\r\n","import React from 'react';\r\n\r\nimport {Cards,Chart,CountryPicker} from './components';\r\nimport styles from './App.module.css';\r\nimport { fetchData } from './api';\r\n\r\nimport coronaImage from './images/image.png'\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    data: {},\r\n    country: '',\r\n  }\r\n\r\n  async componentDidMount(){\r\n    const fetchedData =await fetchData();\r\n\r\n    this.setState({ data: fetchedData});\r\n  }\r\n\r\n  handleCountryChange = async (country) => {\r\n    const fetchedData = await fetchData(country);\r\n\r\n    this.setState({ data: fetchedData,country: country});\r\n  }\r\n\r\n  render(){\r\n    const { data, country } = this.state;\r\n    return (\r\n      <div className={styles.container}>\r\n        <img className={styles.image} src={coronaImage} alt=\"CoronaImage\"/>\r\n        <Cards data={data}/>\r\n        <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n        <Chart data={ data } country={ country}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App/>,document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3PcPh\",\"image\":\"App_image__3sZhe\",\"conatiner\":\"App_conatiner__2s7F7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1qZsW\",\"conatiner\":\"Chart_conatiner__UF8vz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__3VuEA\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}